---
- name: Downloading newest helm binaries locally
  unarchive:
      src: "{{ item }}" 
      dest: "{{ role_path }}/files/"
      remote_src: yes 
  run_once: true
  delegate_to: localhost
  with_items: 
    - https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz
    - https://get.helm.sh/helm-{{ helm_version }}-linux-arm.tar.gz
    - https://get.helm.sh/helm-{{ helm_version }}-linux-arm64.tar.gz

- name: "Check if Helm is installed"
  shell: command -v helm >/dev/null 2>&1
  register: helm_exists
  ignore_errors: yes

- name: Copy binary x64 to host
  copy:
      src: "{{ role_path }}/files/linux-amd64/helm"
      dest: "/usr/local/bin/helm"
      owner: root
      group: root
      mode: '0755'
  when:
    - k8s_node is defined
    - k8s_node in [ "master", "node" ]
    - ansible_facts.architecture == "x86_64"
    - helm_exists.rc > 0


- name: Copy binary arm64 to host
  copy:
      src: "{{ role_path }}/files/linux-arm64/helm"
      dest: "/usr/local/bin/helm"
      owner: root
      group: root
      mode: '0755'
  when:
    - k8s_node is defined
    - k8s_node in [ "master", "node" ]
    - ansible_facts.architecture is search("aarch64")
    - helm_exists.rc > 0
    # - ansible_facts.userspace_bits == "64"

- name: Copy binary armhf to host
  copy:
      src: "{{ role_path }}/files/linux-arm/helm"
      dest: "/usr/local/bin/helm"
      owner: root
      group: root
      mode: '0755'
  when:
    - k8s_node is defined
    - k8s_node in [ "master", "node" ]
    - ansible_facts.architecture is search("arm")
    - ansible_facts.userspace_bits == "32"
    - helm_exists.rc > 0
